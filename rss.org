#+title: RSS Feed

This document outputs the RSS feed for the site when tangled.

* Start stuff

#+begin_src xml :tangle rss.xml
  <?xml version="1.0" ?>
  <rss version="2.0">
  <channel>
    <title>chamook.lol</title>
    <link>https://chamook.lol/</link>
    <description>Posts from chamook.lol</description>
#+end_src

* Posts
** Business Value vs Vibes

#+name: value-post-content
#+begin_src shell :results verbatim
sed -n '/<div id="content" class="container">/,/<div id="postamble" class="status">/p' value-vs-vibes/index.html | head -n-1 | sed 's/</\&lt;/g' | sed 's/>/\&gt;/g'
#+end_src

#+RESULTS: value-post-content
#+begin_example
&lt;div id="content" class="container"&gt;
&lt;p&gt;
When &lt;i&gt;Agile Influencers&lt;/i&gt; wade into attempting to answer the question of &lt;i&gt;what&lt;/i&gt; to make rather
than simply &lt;i&gt;how&lt;/i&gt; to go about making it the concept of &lt;i&gt;Business Value&lt;/i&gt; is often invoked as the
measurestick by which to judge competing options. Simply pick the option that will deliver the
maximum amount of &lt;i&gt;Business Value&lt;/i&gt; and your project will surely be a success and your team
will certainly be productive.
&lt;/p&gt;

&lt;p&gt;
I do not believe this is correct. I believe that &lt;i&gt;Business Value&lt;/i&gt; is an ill-defined idea, a lie, an
irrelevance, and most assuredly not something you should allow to encroach on your decision
making if you are serious about your craft (assuming of course, that misery is not your craft).
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Blessed are the key stakeholders, for they will achieve the product goal
&lt;/p&gt;

&lt;p&gt;
The Book of Scrum 4:19 (NIV)
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div id="outline-container-org6ffb10b" class="outline-2"&gt;
&lt;h2 id="org6ffb10b"&gt;What is valuable to a business anyways?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6ffb10b"&gt;
&lt;p&gt;
Under capitalism a business exists to concentrate wealth into the possession of its owners by
making money &lt;sup&gt;&lt;a id="fnr.1" class="footref" href="#fn.1" role="doc-backlink"&gt;1&lt;/a&gt;&lt;/sup&gt;. This can be a motivating system to spur innovation and the production of
goods and the deliverance of services that greatly improve the lives of all those who can
purchase them. It can also lead to a bunch of weird dudes exploiting their way into hoarding a
massive amount of wealth that they can use on &lt;a href="https://www.youtube.com/watch?v=Q1AilPvC37c"&gt;meaningless days out&lt;/a&gt; and
&lt;a href="https://www.theverge.com/2022/11/15/23460729/elon-musk-fire-twitter-engineers-dissent"&gt;being dicks to people at websites&lt;/a&gt;. So I think we could say that at best it's a &lt;i&gt;mixed bag&lt;/i&gt;.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
It's cool and good that people suffer and die from preventable problems, because that means
that the number representing my almost unimaginable wealth goes up
&lt;/p&gt;

&lt;p&gt;
literally every billionaire
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
The obvious answer then to the question of Business Value is that anything that would make
money for a business is valuable. However, even for things that directly deal with income or
outgoings it is not always easy to directly identify which changes will lead to the business
retaining a greater share of capital than it currently does - and this uncertainty is only amplified
as the relationship becomes more indirect. This uncertainty is not limited only to a risk of
developments not providing any return, but also the risk of any change actively harming the
current state of affairs leading to losses.
&lt;/p&gt;

&lt;p&gt;
Even if it were possible for a business to predict what actions would lead to the best returns
(that is, those that return the greatest amount of profit) it is not certain that this aligns with
the best outcome for anyone connected to the business who wants something other than
maximum profit. Consider these possible actions:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;a company fires many workers from it's product team leading to savings on labour but the
fired workers have now lost their employment, and the remaining team is left with more work
to split among fewer members causing an increase in stess&lt;/li&gt;
&lt;li&gt;adding extra data collection to an app allows a company to sell that user data to advertisers
(or shadier organisations) which brings extra income for the company but worsens the user
experience and doesn't fit with the ethics of the developers&lt;/li&gt;
&lt;li&gt;rushing a new feature to &lt;i&gt;meet market demands&lt;/i&gt; means that there is no time to properly
evaluate the impact on the userbase and it's implementation leads to abuse&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Each of these scenarios could include the business realising perceived business value, but the
other negative effects make them the opposite of valuable to anyone with other values.
&lt;/p&gt;

&lt;p&gt;
Business Value then is at best a vague uncertainty, and at worst actively harmful on a scale only
limited to those things that the business can affect. Using this as a guide for what work should
be done is not a responsible way to use people's labour.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org70859d5" class="outline-2"&gt;
&lt;h2 id="org70859d5"&gt;A business without value?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org70859d5"&gt;
&lt;p&gt;
Fine. Ok. A business has to make a profit or it can't exist. Maybe that's not a sensible way of
organising our whole society given the nightmarish things we've seen it lead to. But fine,
given the current arrangement of things we'll accept this for now&lt;sup&gt;&lt;a id="fnr.2" class="footref" href="#fn.2" role="doc-backlink"&gt;2&lt;/a&gt;&lt;/sup&gt;.
&lt;/p&gt;

&lt;p&gt;
But perhaps we can be a little bit more discerning than just blindly accepting the wild and
unchecked pursuit of profit at all costs?
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
I did it all for the nookie
&lt;/p&gt;

&lt;p&gt;
Fred Durst, proposing an alternative system of value
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
To simply remove the worst negative aspects of the pursuit of business value, doesn't solve the
other challenges of determining what would offer positive returns - we need to find an approach
that allows us to gain some insight into what does. For that matter, we also need to figure out
a way to navigate with work that might not be quite so cartoonishly villianous, but could still
have an impact that we aren't comfortable with.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org823b368" class="outline-2"&gt;
&lt;h2 id="org823b368"&gt;How do we decide what's valuable?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org823b368"&gt;
&lt;p&gt;
We don't need to throw out all of agile at least, so we can start with working in small increments
that we immediately make available to get fast feedback. But we are left needing a method of
judging that feedback, and we also want to be able to judge our own work without needing to
inflict it on our unsuspecting users. While the users may ultimately decide if we keep or revert a
change, it is important that we can decide for ourselves which changes we want to focus on in
the first place.
&lt;/p&gt;

&lt;p&gt;
To this end, I think it is worth making a semi structured attempt to evaluate our own feelings
about a potential change before, during, and after we make it. Because I am ageing and wish
to cling to a semblance of my youth, I will call this a &lt;i&gt;Vibe Check&lt;sup&gt;&lt;a id="fnr.3" class="footref" href="#fn.3" role="doc-backlink"&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/i&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6674fd6" class="outline-2"&gt;
&lt;h2 id="org6674fd6"&gt;Checking the Vibes&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6674fd6"&gt;
&lt;blockquote&gt;
&lt;p&gt;
Search your feelings, you know this code is bad
&lt;/p&gt;

&lt;p&gt;
Darth Vader (@l33td4rth on github)
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
I think it is important to start with a disclaimer that this is not merely intended to be a system of
self gratification. We are bound by externalities, and the actions we take do affect others - so
it is necessary to approach a process such as this with a clear understanding of what we aim to
do and where the limits of our understanding may lie. If I am working on something that will
impact people who have a significantly different life experience to my own it may fall outside of
my own competence to evaluate the effects of my changes on those people - but as I do not
wish to cause harm with my actions it would fall on me to learn about those impacts, this is best
accomplished by having a person from that group as part of the team I work with so that they are
constantly involved but if that is not available I can reach outside the team and use  the good ol'
fallback of talking with people.
&lt;/p&gt;

&lt;p&gt;
Assuming that we are working as part of a team that has reached some level of consensus on
what types of aims we have, and that we have methods in place to gain additional context from
outside groups should we need it - we can proceed.
&lt;/p&gt;
&lt;/div&gt;

&lt;div id="outline-container-org36cf487" class="outline-3"&gt;
&lt;h3 id="org36cf487"&gt;Thinkin' about the future&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org36cf487"&gt;
&lt;p&gt;
Before we make a change or build a thing, let's take a moment to consider what it is we're aiming
to do and if the thing we're doing furthers that goal. Consider that there are many options of things
to do at any given time, so if there is controversy about an option it could well be safe to just punt
on it for now, and review it again later if some people still think it's a good idea - sometimes timing
is a factor, but it's not worth compromising our integrity for a chance at good timing. Overall our
goal should be to be generally happy and comfortable with what we're making, and happy and
comfortable with the impact it has - but bear in mind that if something is difficult to do because
we're doing it the right way to ensure it has a more positive impact, then that is good and the type
of comfort we ought to be sacrificing rather than taking the easy way out but having worse outcomes
for people affected by the system.
&lt;/p&gt;

&lt;p&gt;
I promised (semi-)structure so here are some sample questions to ask at this stage, but it's not a
prescriptive list so feel free to use your own questions that I am sure are definitely better than the
ones I came up with and you should totally feel good about them.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Will this change let our users do more with the system?&lt;/li&gt;
&lt;li&gt;Are we clarifying concepts in our domain with this change?&lt;/li&gt;
&lt;li&gt;If we had this feature already, what kind of problems would it be causing for us?&lt;/li&gt;
&lt;li&gt;Is there a simpler way to get the same benefit?&lt;/li&gt;
&lt;li&gt;Does making this change prevent us from doing other things in the future?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
Note that these questions are a mix of things that relate to the product and user experience, and
things that relate to implementation details. I think it is important that we explicitly consider both
at each stage of this process but understand that it will be necessary to make trade-offs.
Naturally we want to be thrilled about both aspects, but sometimes providing a feature that is
beneficial to users will require implementation work that is frustrating or boring and conversely
sometimes engineering a solution properly will limit features that can be made available. The
important thing is to be aware of both of these aspects and ensure that we are not violating our
own constraints on either side for the sake of the other. Or in other words, don't do evil things
because the tech was cool, and don't refuse to do good things because the tech is boring.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge41fab9" class="outline-3"&gt;
&lt;h3 id="orge41fab9"&gt;Conciously doing&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orge41fab9"&gt;
&lt;p&gt;
As work progresses on any given feature/change/iteration we will learn more about what it is
we're making. Hopefully, any new information we discover will simply confirm that we made a
fantastic choice to work on this particular thing and that will be that, but more likely we will be
presented with questions and challenges about the implementation of what we're doing, and
possibly we might even discover that give us pause about the impact of it.
&lt;/p&gt;

&lt;p&gt;
We need to make space as we work to address this information when we discover it, because if
it does have a significant impact on how we want to proceed with the work it will save us time,
frustration, and effort to consider that impact as it is made rather than progressing along a bad
course and making the costs of change higher. I am certain that by this point, you're brimming
with ideas for questions to ask when you discover information as you build but I will include
some samples here for completeness:
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Could we deliver a smaller version of this change to avoid technical challenges while still
getting some benefit?&lt;/li&gt;
&lt;li&gt;Should we expand the scope of this change so that it can properly deliver the value we wanted?&lt;/li&gt;
&lt;li&gt;Can we reasonably delay this change to implement it in a better way, or should we focus on
delivering the change now and change the way we implement it later?&lt;/li&gt;
&lt;li&gt;[dramatically] Have we underestimated the impact of this change and should abandon it for
now until we know it won't cause problems?&lt;/li&gt;
&lt;li&gt;[less dramatically] Did we discover that this change won't be able to solve the problem that we
wanted it to? Is it still worth implementing?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
These questions imply the possibility of significantly increasing the amount of work that we need
to do, or significantly decreasing the amount of stuff we deliver&lt;sup&gt;&lt;a id="fnr.4" class="footref" href="#fn.4" role="doc-backlink"&gt;4&lt;/a&gt;&lt;/sup&gt; and this is often something
that needs to be coordinated with other people. This potential for disruption when an expected
timeline has been set is something that makes a lot of people uncomfortable but if we are to
give a proper amount of respect and consideration to new information then it is to a degree
unavoidable. It is important then to avoid conflict with people who might rely on our work, that
we are clear up front about things that can happen during the process. Try where possible, to
work with people on shared &lt;i&gt;goals&lt;/i&gt; rather than a specific &lt;i&gt;change&lt;/i&gt; or &lt;i&gt;feature&lt;/i&gt; - it is easier to
let go of a feature when it becomes clear that it is not meeting your needs than when you expect
it is the solution to your problems.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org249989f" class="outline-3"&gt;
&lt;h3 id="org249989f"&gt;Spectating retroactively&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org249989f"&gt;
&lt;p&gt;
Some things are never done. Whenever we deliver something we want to know how well it is
actually received, how fit it turned out to be for its purpose, how it should impact our future
changes, and if we learned anything from the process that should change the way we work or
the questions we ask in the future.
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
Look upon my works, ye mighty, and tell me on a scale of 1 and 10 how likely you would be to
recommend them to a friend
&lt;/p&gt;

&lt;p&gt;
Ozymandias, King of NPS
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
Releasing something new is exciting, it can be all too easy to become attached to what you have
made and lose focus on what it was supposed to do, be on your guard against such feelings -
remember the reasons that you do things, not only what you have done.
&lt;/p&gt;

&lt;p&gt;
When something is out in the world and in use, it can be tempting to search for simple metrics
that fit nicely onto a graph to evaluate how something was received - the graph is going up, so
everything is good! Some metrics are good and useful, for example we know
&lt;a href="https://www.nngroup.com/articles/response-times-3-important-limits/"&gt;how fast something should respond&lt;/a&gt; when people are working with it so we can track the
response times of our own systems to see if they fall into line. Other metrics are less useful,
if we really want to get a feel for how a change is working out in the world, we need to seek out
qualitive information from people who actually use it - the ideal scenario being the opportunity
to watch people use the system and then talking with them afterwards.
&lt;/p&gt;

&lt;p&gt;
The questions that you ask to users should be different to those that you ask yourselves, the goal
when talking to them is to discover how they use a system and why they did it in that particular way -
this can often give insights into how it could better work with them to gain a desired result, but it
can also provide things to consider about how you got here.
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;Did the results match our expectations?&lt;/li&gt;
&lt;li&gt;Was our understanding of the problem domain complete?&lt;/li&gt;
&lt;li&gt;How much information did we reveal while making something, and does that information change
our expectations for the future?&lt;/li&gt;
&lt;li&gt;Is there anything we learned during this that we didn't immediately act upon, but now we should
do something with it?&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org74c36e7" class="outline-2"&gt;
&lt;h2 id="org74c36e7"&gt;What was all this about?&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org74c36e7"&gt;
&lt;blockquote&gt;
&lt;p&gt;
I tried so hard, and got so far, but in the end I didn't hit my KPIs
&lt;/p&gt;

&lt;p&gt;
Chester Bennington
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
You have significant productive capacity, but you can only use it on a limited number of things.
Those things should not be decided merely by profit, they should be your way of making the world
better according to your own values and ethics. Ok fine, you don't really have to make things
better, sometimes getting by is enough - but making things worse as you go isn't fine and you
are responsible for stopping that from happening. In order to keep track of what you're doing and
the impact that it's having you should be prepared to question things along the way, before, during,
and after doing something. You also need to be prepared to deal with the ramifications of acting
on the information you gained from those questions.
&lt;/p&gt;

&lt;p&gt;
You get to decide these things, and you can produce great stuff - listen to the vibes, don't chase
blindly after business value.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes&lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="#fnr.1" role="doc-backlink"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara" role="doc-footnote"&gt;&lt;p class="footpara"&gt;
I do realise that software development is undertaken in contexts other than that of for a business,
but I can't write about everything. If you are in one of those other contexts, maybe this post is less
relevant to you, or maybe it is a trove of brilliant insights - I guess the only way to find out is to read it.
xoxoxo
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" class="footnum" href="#fnr.2" role="doc-backlink"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara" role="doc-footnote"&gt;&lt;p class="footpara"&gt;
Should we accept this forever though? Send your answer on the side of a bottle filled
with burning gasoline to your nearest billionaire's compound.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.3" class="footnum" href="#fnr.3" role="doc-backlink"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara" role="doc-footnote"&gt;&lt;p class="footpara"&gt;
Do not feel the need to inform me that this phrasing is outdated, I simply do not wish to know.
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.4" class="footnum" href="#fnr.4" role="doc-backlink"&gt;4&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara" role="doc-footnote"&gt;&lt;p class="footpara"&gt;
They also imply the opposite of those, but less work and more stuff done are nice things
so let's just enjoy when that happens eh? 🍹
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
#+end_example



#+begin_src xml :tangle rss.xml :noweb yes
  <item>
    <title>Business Value Isn't Real, Only Vibes Can Be Trusted</title>
    <link>https://chamook.lol/value-vs-vibes/</link>
    <description>
      <<value-post-content()>>
    </description>
    <pubDate>Mon, 28 Nov 2022 00:00:01 +0100</pubDate>
    <guid>https://chamook.lol/value-vs-vibes/</guid>
    </item>
#+end_src

** Indego Homey

#+name: homey-post-content
#+begin_src shell :results verbatim
sed -n '/<div id="content" class="container">/,/<div id="postamble" class="status">/p' indego-homey/index.html | head -n-1 | sed 's/</\&lt;/g' | sed 's/>/\&gt;/g'
#+end_src

#+RESULTS: homey-post-content
: &lt;div id="content" class="container"&gt; &lt;p&gt; My brother-in-law has a &lt;a href="https://www.bosch-diy.com/dk/da/haveredskaber/robotplaeneklippere"&gt;Bosch Indego&lt;/a&gt; robot mower that he wants to control via &lt;a href="https://homey.app/"&gt;Homey&lt;/a&gt;. There was no app readily available, but there is an API available that has several open source clients. I helped him create some blocks of &lt;a href="https://homey.app/en-us/app/com.athom.homeyscript/HomeyScript/"&gt;HomeyScript&lt;/a&gt; to call the API and integrate the mower into the rest of his smart home. The code here leans heavily on the work already done in the &lt;a href="https://github.com/zazaz-de/iot-device-bosch-indego-controller"&gt;Java Controller Application&lt;/a&gt; and in the &lt;a href="https://pypi.org/project/pyIndego/"&gt;pyIndego Python Library&lt;/a&gt;, especially the &lt;a href="https://github.com/zazaz-de/iot-device-bosch-indego-controller/blob/master/PROTOCOL.md"&gt;documentation of the protocol&lt;/a&gt;. &lt;/p&gt;  &lt;div id="outline-container-org2eea2a4" class="outline-2"&gt; &lt;h2 id="org2eea2a4"&gt;Authentication&lt;/h2&gt; &lt;div class="outline-text-2" id="text-org2eea2a4"&gt; &lt;p&gt; Most requests in the API require a &lt;code&gt;contextId&lt;/code&gt; value, and to get one of those we first need to make a &lt;code&gt;POST&lt;/code&gt; request to the &lt;code&gt;/authenticate&lt;/code&gt; endpoint providing some details about the client as well as a &lt;code&gt;Basic&lt;/code&gt; authentication token. &lt;/p&gt;  &lt;p&gt; The authentication token is built by base64 encoding a string comprised of your username and password separated by a colon. This can be done conveniently in most programming languages, such as javascript: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-js" id="org299053b"&gt;&lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; btoa&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;"username@email.com:secret-password"&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; As is, this will output the following (but don't forget to use your actual username and password if you want to connect to the API for real): &lt;/p&gt;  &lt;pre class="example"&gt; dXNlcm5hbWVAZW1haWwuY29tOnNlY3JldC1wYXNzd29yZA== &lt;/pre&gt;  &lt;p&gt; (Note that the above code sample won't actually work in HomeyScript, so you'll need to use a different approach if you want to generate the token as part of that) &lt;/p&gt;  &lt;p&gt; With the token generated we can get a &lt;code&gt;contextId&lt;/code&gt; from the &lt;code&gt;/authenticate&lt;/code&gt; endpoint: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http" id="org2ee571d"&gt;&lt;span style="color: #96CBFE;"&gt;POST&lt;/span&gt; &lt;span style="color: #ff1493;"&gt;https://api.indego.iot.bosch-si.com/api/v1/authenticate&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;Authorization&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;Basic dXNlcm5hbWVAZW1haWwuY29tOnNlY3JldC1wYXNzd29yZA==&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;Content-Type&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;application/json&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"accept_tc_id"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;"202012"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"device"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;""&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"os_type"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Android"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"os_version"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"4.0"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"dvc_manuf"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"unknown"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"dvc_type"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"unknown"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; The token generated previously is provided in the &lt;code&gt;Authorization&lt;/code&gt; header, while we can use sample data to populate most of the fields in the request. It is worth noting that the &lt;code&gt;accept_tc_id&lt;/code&gt; field value will likely need to be updated in the future if a new revision of the terms and conditions for the API are released. &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;HTTP/1.1 200  &lt;span style="color: #ff69b4;"&gt;Content-Type&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;application/json&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"contextId"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"'3f2a9e8c-93cb-402e-a200-e325859f3ffe"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"userId"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"0a86dc31-7136-4009-9ef6-61ac4cab696e"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"alm_sn"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"000000000"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; This provides us with the &lt;code&gt;contextId&lt;/code&gt; that is needed to make other requests. &lt;/p&gt;  &lt;p&gt; Before making other requests we can make this in a HomeyScript function: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-js"&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;pull values from the flow editor&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;user&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;0&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;pwd&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;1&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;btoa isn't available :(&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;buffer&lt;/span&gt; = Buffer.from&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;user + &lt;span style="color: #61CE3C;"&gt;':'&lt;/span&gt; + pwd&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;headerData&lt;/span&gt; = buffer.toString&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;'base64'&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;authHeader&lt;/span&gt; = &lt;span style="color: #61CE3C;"&gt;'Basic '&lt;/span&gt; + headerData;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;authRequestBody&lt;/span&gt; = &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     accept_tc_id: &lt;span style="color: #61CE3C;"&gt;"202012"&lt;/span&gt;,     device: &lt;span style="color: #61CE3C;"&gt;""&lt;/span&gt;,     os_type: &lt;span style="color: #61CE3C;"&gt;"Android"&lt;/span&gt;,     os_version: &lt;span style="color: #61CE3C;"&gt;"4.0"&lt;/span&gt;,     dvc_manuf: &lt;span style="color: #61CE3C;"&gt;"unknown"&lt;/span&gt;,     dvc_type: &lt;span style="color: #61CE3C;"&gt;"unknown"&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;result&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; fetch&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;'https://api.indego.iot.bosch-si.com/api/v1/authenticate'&lt;/span&gt;, &lt;span style="color: #006400;"&gt;{&lt;/span&gt;     method: &lt;span style="color: #61CE3C;"&gt;'POST'&lt;/span&gt;,     body: JSON.stringify&lt;span style="color: #ff1493;"&gt;(&lt;/span&gt;authRequestBody&lt;span style="color: #ff1493;"&gt;)&lt;/span&gt;,     headers: &lt;span style="color: #ff1493;"&gt;{&lt;/span&gt;         &lt;span style="color: #61CE3C;"&gt;'Authorization'&lt;/span&gt;: authHeader,         &lt;span style="color: #61CE3C;"&gt;'Content-Type'&lt;/span&gt;: &lt;span style="color: #61CE3C;"&gt;'application/json'&lt;/span&gt;     &lt;span style="color: #ff1493;"&gt;}&lt;/span&gt; &lt;span style="color: #006400;"&gt;}&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;fail for any error and return any error message we were given&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;if&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;!result.ok&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     &lt;span style="color: #4c83ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;new&lt;/span&gt; &lt;span style="color: #afd8af;"&gt;Error&lt;/span&gt;&lt;span style="color: #006400;"&gt;(&lt;/span&gt;result.statusText&lt;span style="color: #006400;"&gt;)&lt;/span&gt;; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;body&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; result.json&lt;span style="color: #8b0000;"&gt;()&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;return just the context id because we don't care about the other values&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; body.contextId; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; The two &lt;code&gt;const&lt;/code&gt; values for &lt;code&gt;user&lt;/code&gt; and &lt;code&gt;pwd&lt;/code&gt;  should be provided from the flow editor, and this will output the &lt;code&gt;contextId&lt;/code&gt; as a text value, that can then be passed to another function to do something. &lt;/p&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-org16cb325" class="outline-2"&gt; &lt;h2 id="org16cb325"&gt;Get Available Devices&lt;/h2&gt; &lt;div class="outline-text-2" id="text-org16cb325"&gt; &lt;p&gt; If you already know the serial number for your mower, you can skip this step and just use that to work with it directly. If you don't know the serial number or you have multiple mowers that you want to work with, there is an API endpoint that will list all the available devices: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;&lt;span style="color: #96CBFE;"&gt;GET&lt;/span&gt; &lt;span style="color: #ff1493;"&gt;https://api.indego.iot.bosch-si.com/api/v1/alms/&lt;/span&gt; x-im-context-id&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3f2a9e8c-93cb-402e-a200-e325859f3ffe &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; Which will give a list containing the serial number and status code for the mowers connected to the account: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;HTTP/1.1 200 &lt;span style="color: #ff69b4;"&gt;Content-Type&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;application/json&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;[&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"alm_sn"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"000000000"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"alm_status"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 258 &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;]&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; The serial number is then used to get more detailed information or to control the mower. &lt;/p&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-orgc165d77" class="outline-2"&gt; &lt;h2 id="orgc165d77"&gt;Get Information About The Mower&lt;/h2&gt; &lt;div class="outline-text-2" id="text-orgc165d77"&gt; &lt;p&gt; Now we have the &lt;code&gt;contextId&lt;/code&gt; and the serial number of the mower we want to work with, we can make two different calls to get information about the mower. &lt;/p&gt; &lt;/div&gt;  &lt;div id="outline-container-orgd3cb5af" class="outline-3"&gt; &lt;h3 id="orgd3cb5af"&gt;State&lt;/h3&gt; &lt;div class="outline-text-3" id="text-orgd3cb5af"&gt; &lt;p&gt; First &lt;code&gt;/state&lt;/code&gt; will give information about the current state of the mower, we need to include the serial number of the mower we want to get information about in the url and the context id is provided as a header: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http" id="orgcf4a5f7"&gt;&lt;span style="color: #96CBFE;"&gt;GET&lt;/span&gt; &lt;span style="color: #ff1493;"&gt;https://api.indego.iot.bosch-si.com/api/v1/alms/{serial-number}/state&lt;/span&gt; x-im-context-id&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3f2a9e8c-93cb-402e-a200-e325859f3ffe &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; Which gives a response like this: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;HTTP/1.1 200 &lt;span style="color: #ff69b4;"&gt;Content-Type&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;application/json&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"state"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 258&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"enabled"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; true&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"map_update_available"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; true&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"mowed"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 98&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"mowmode"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 1&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"xPos"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 12&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"yPos"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 15&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"runtime"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"total"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"operate"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 100000&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"charge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 30000     &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"session"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"operate"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 2&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"charge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0     &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt;   &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"mapsvgcache_ts"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 1582506399367&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"svg_xPos"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 131&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"svg_yPos"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 111&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"config_change"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; false&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"mow_trig"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; false &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; The status code can be looked up in the following table that is a combination of data found in both the projects that I linked at the start of this post and some extra details that my brother-in-law figured out: &lt;/p&gt;  &lt;table&gt;   &lt;colgroup&gt; &lt;col  class="org-right"&gt;  &lt;col  class="org-left"&gt; &lt;/colgroup&gt; &lt;thead&gt; &lt;tr&gt; &lt;th scope="col" class="org-right"&gt;Status Code&lt;/th&gt; &lt;th scope="col" class="org-left"&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td class="org-right"&gt;0&lt;/td&gt; &lt;td class="org-left"&gt;Reading Status&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;101&lt;/td&gt; &lt;td class="org-left"&gt;Docked&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;257&lt;/td&gt; &lt;td class="org-left"&gt;Charging&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;258&lt;/td&gt; &lt;td class="org-left"&gt;Docked&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;259&lt;/td&gt; &lt;td class="org-left"&gt;Docked - Software Update&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;260&lt;/td&gt; &lt;td class="org-left"&gt;Charging (Ran out of power)&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;261&lt;/td&gt; &lt;td class="org-left"&gt;Docked (Not 258 State)&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;262&lt;/td&gt; &lt;td class="org-left"&gt;Docked - Loading Map&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;263&lt;/td&gt; &lt;td class="org-left"&gt;Docked -Saving Map&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;266&lt;/td&gt; &lt;td class="org-left"&gt;Leaving Dock&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;512&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;513&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;514&lt;/td&gt; &lt;td class="org-left"&gt;Relocalising&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;515&lt;/td&gt; &lt;td class="org-left"&gt;Loading map&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;516&lt;/td&gt; &lt;td class="org-left"&gt;Learning lawn&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;517&lt;/td&gt; &lt;td class="org-left"&gt;Paused&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;518&lt;/td&gt; &lt;td class="org-left"&gt;Border cut&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;519&lt;/td&gt; &lt;td class="org-left"&gt;Idle in lawn&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;520&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;521&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;522&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;523&lt;/td&gt; &lt;td class="org-left"&gt;Spot Mow&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;524&lt;/td&gt; &lt;td class="org-left"&gt;Mow without Docking Station&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;525&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;768&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;769&lt;/td&gt; &lt;td class="org-left"&gt;Returning to Dock&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;770&lt;/td&gt; &lt;td class="org-left"&gt;Returning to Dock&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;771&lt;/td&gt; &lt;td class="org-left"&gt;Returning to Dock - Battery low&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;772&lt;/td&gt; &lt;td class="org-left"&gt;Returning to dock - Calendar timeslot ended&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;773&lt;/td&gt; &lt;td class="org-left"&gt;Returning to dock - Battery temp range&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;774&lt;/td&gt; &lt;td class="org-left"&gt;Returning to dock&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;775&lt;/td&gt; &lt;td class="org-left"&gt;Returning to dock - Lawn complete&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;776&lt;/td&gt; &lt;td class="org-left"&gt;Returning to dock - Relocalising&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1005&lt;/td&gt; &lt;td class="org-left"&gt;Mowing&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1025&lt;/td&gt; &lt;td class="org-left"&gt;Diagnostic mode&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1026&lt;/td&gt; &lt;td class="org-left"&gt;End of life&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1027&lt;/td&gt; &lt;td class="org-left"&gt;Service Requesting Status&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1038&lt;/td&gt; &lt;td class="org-left"&gt;Mower immobilized&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1281&lt;/td&gt; &lt;td class="org-left"&gt;Software update&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;1537&lt;/td&gt; &lt;td class="org-left"&gt;Stuck&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;64513&lt;/td&gt; &lt;td class="org-left"&gt;Sleeping (Docked)&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td class="org-right"&gt;99999&lt;/td&gt; &lt;td class="org-left"&gt;Offline&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-org2c9d890" class="outline-3"&gt; &lt;h3 id="org2c9d890"&gt;Operating Data&lt;/h3&gt; &lt;div class="outline-text-3" id="text-org2c9d890"&gt; &lt;p&gt; And then &lt;code&gt;/operatingData&lt;/code&gt; which can provide more detailed information for some properties, again including the serial number in the url and the context id as a header: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http" id="org7b60ebd"&gt;&lt;span style="color: #96CBFE;"&gt;GET&lt;/span&gt; &lt;span style="color: #ff1493;"&gt;https://api.indego.iot.bosch-si.com/api/v1/alms/{serial number}/operatingData&lt;/span&gt; x-im-context-id&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3f2a9e8c-93cb-402e-a200-e325859f3ffe &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; In a response that looks like this: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;HTTP/1.1 200  &lt;span style="color: #ff69b4;"&gt;Content-Type&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;application/json&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"runtime"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"total"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"operate"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 100000&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"charge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 35002     &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"session"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"operate"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;       &lt;span style="color: #61CE3C;"&gt;"charge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0     &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt;   &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"battery"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"voltage"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 7.0&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"cycles"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"discharge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; -0.1&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"ambient_temp"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 23&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"battery_temp"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 23&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"percent"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 70   &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"garden"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"id"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 1&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"name"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 1&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"signal_id"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"size"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 157&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"inner_bounds"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"cuts"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 0&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"runtime"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 100000&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"charge"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 35002&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"bumps"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 281&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"stops"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 90&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"last_mow"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3&lt;span style="color: #8B8989; font-style: italic;"&gt;,&lt;/span&gt;     &lt;span style="color: #61CE3C;"&gt;"map_cell_size"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 120   &lt;span style="color: #8B8989; font-style: italic;"&gt;},&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"hmiKeys"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 12019 &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-orgbfd3695" class="outline-3"&gt; &lt;h3 id="orgbfd3695"&gt;HomeyScript&lt;/h3&gt; &lt;div class="outline-text-3" id="text-orgbfd3695"&gt; &lt;p&gt; Knowing how these requests and responses look, we can make useful HomeyScript functions so we could display the information somewhere or include it as part of a flow. &lt;/p&gt; &lt;/div&gt;  &lt;div id="outline-container-org04148fc" class="outline-4"&gt; &lt;h4 id="org04148fc"&gt;Get Status&lt;/h4&gt; &lt;div class="outline-text-4" id="text-org04148fc"&gt; &lt;p&gt; Query the state endpoint and return the status converted to a human readable string: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-js"&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;pull values from the flow editor&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;contextId&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;0&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;serialNumber&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;1&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;get the current state&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;result&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; fetch&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;'https://api.indego.iot.bosch-si.com/api/v1/alms/'&lt;/span&gt; + serialNumber + &lt;span style="color: #61CE3C;"&gt;'/state'&lt;/span&gt;, &lt;span style="color: #006400;"&gt;{&lt;/span&gt;     method: &lt;span style="color: #61CE3C;"&gt;'GET'&lt;/span&gt;,     headers: &lt;span style="color: #ff1493;"&gt;{&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;'x-im-context-id'&lt;/span&gt;: contextId &lt;span style="color: #ff1493;"&gt;}&lt;/span&gt; &lt;span style="color: #006400;"&gt;}&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;;  &lt;span style="color: #4c83ff;"&gt;if&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;!result.ok&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     &lt;span style="color: #4c83ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;new&lt;/span&gt; &lt;span style="color: #afd8af;"&gt;Error&lt;/span&gt;&lt;span style="color: #006400;"&gt;(&lt;/span&gt;result.statusText&lt;span style="color: #006400;"&gt;)&lt;/span&gt;; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;body&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; result.json&lt;span style="color: #8b0000;"&gt;()&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;convert the status code to human readable text&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;switch&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;body.state&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;0&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Reading status"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;257&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Charging"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;258&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;259&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked - Software update"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;260&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked (Ran out of Power)"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;261&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked (not 258 State)"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;262&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked - Loading map"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;263&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Docked - Saving map"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;266&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Leaving dock"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;513&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Mowing"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;514&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Relocalising"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;515&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Loading map"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;516&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Learning lawn"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;517&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Paused"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;518&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Border cut"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;519&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Idle in lawn"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;523&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Spot Mow"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;524&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Mow without Docking Station"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;769&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to Dock"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;770&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to Dock"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;771&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to Dock - Battery low"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;772&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to dock - Calendar timeslot ended"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;773&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to dock - Battery temp range"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;774&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to dock"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;775&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to dock - Lawn complete"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;776&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Returning to dock - Relocalising"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1005&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Mowing"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1025&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Diagnostic mode"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1026&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"End of life"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1027&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Service Requesting Status"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1038&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Mower immobilized"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1281&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Software update"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;1537&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Stuck"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;64513&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Sleeping (Docked)"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;case&lt;/span&gt; &lt;span style="color: #96CBFE;"&gt;99999&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"Offline"&lt;/span&gt;;     &lt;span style="color: #4c83ff;"&gt;default&lt;/span&gt;: &lt;span style="color: #4c83ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;new&lt;/span&gt; &lt;span style="color: #afd8af;"&gt;Error&lt;/span&gt;&lt;span style="color: #006400;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;"Unknown state"&lt;/span&gt; + body.state&lt;span style="color: #006400;"&gt;)&lt;/span&gt;; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-org6e3d2a6" class="outline-4"&gt; &lt;h4 id="org6e3d2a6"&gt;Get Battery Percentage&lt;/h4&gt; &lt;div class="outline-text-4" id="text-org6e3d2a6"&gt; &lt;p&gt; Query the operating data and return only the battery percentage value, this can easily be modified to return other values instead: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-js"&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;pull values from the flow editor&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;contextId&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;0&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;serialNumber&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;1&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;get operating data&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;result&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; fetch&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;'https://api.indego.iot.bosch-si.com/api/v1/alms/'&lt;/span&gt; + serialNumber + &lt;span style="color: #61CE3C;"&gt;'/operatingData'&lt;/span&gt;, &lt;span style="color: #006400;"&gt;{&lt;/span&gt;     method: &lt;span style="color: #61CE3C;"&gt;'GET'&lt;/span&gt;,     headers: &lt;span style="color: #ff1493;"&gt;{&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;'x-im-context-id'&lt;/span&gt;: contextId &lt;span style="color: #ff1493;"&gt;}&lt;/span&gt; &lt;span style="color: #006400;"&gt;}&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;;  &lt;span style="color: #4c83ff;"&gt;if&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;!result.ok&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     &lt;span style="color: #4c83ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;new&lt;/span&gt; &lt;span style="color: #afd8af;"&gt;Error&lt;/span&gt;&lt;span style="color: #006400;"&gt;(&lt;/span&gt;result.statusText&lt;span style="color: #006400;"&gt;)&lt;/span&gt;; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;body&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; result.json&lt;span style="color: #8b0000;"&gt;()&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;//&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;return battery percentage&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;return&lt;/span&gt; body.battery.percent; &lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-org7c94378" class="outline-2"&gt; &lt;h2 id="org7c94378"&gt;Control the Mower&lt;/h2&gt; &lt;div class="outline-text-2" id="text-org7c94378"&gt; &lt;p&gt; With code in place to authenticate with the API and retrieve information about the mower it is quite straightforward to control the mower. We just need to make a &lt;code&gt;PUT&lt;/code&gt; request to the &lt;code&gt;/state&lt;/code&gt; endpoint with the desired state command: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-http"&gt;&lt;span style="color: #96CBFE;"&gt;PUT&lt;/span&gt; &lt;span style="color: #ff1493;"&gt;https://api.indego.iot.bosch-si.com/api/v1/alms/{serial number}/state&lt;/span&gt; x-im-context-id&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; 3f2a9e8c-93cb-402e-a200-e325859f3ffe content-type&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; application/json  &lt;span style="color: #8B8989; font-style: italic;"&gt;{&lt;/span&gt;   &lt;span style="color: #61CE3C;"&gt;"state"&lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;:&lt;/span&gt; &lt;span style="color: #61CE3C;"&gt;"mow"&lt;/span&gt; &lt;span style="color: #8B8989; font-style: italic;"&gt;}&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt;  &lt;p&gt; We can issue a &lt;code&gt;mow&lt;/code&gt;  command to start the mower, and a &lt;code&gt;returnToDock&lt;/code&gt; command to stop it and have it go back to the dock. &lt;/p&gt;  &lt;p&gt; In HomeyScript this can be done like so: &lt;/p&gt;  &lt;div class="org-src-container"&gt; &lt;pre class="src src-js"&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;pull values from the flow editor&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;contextId&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;0&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;serialNumber&lt;/span&gt; = args&lt;span style="color: #8b0000;"&gt;[&lt;/span&gt;&lt;span style="color: #96CBFE;"&gt;1&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;]&lt;/span&gt;;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;send the request to the api&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;body&lt;/span&gt; = &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     state: &lt;span style="color: #61CE3C;"&gt;"mow"&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;;  &lt;span style="color: #4c83ff;"&gt;const&lt;/span&gt; &lt;span style="color: #ff69b4;"&gt;result&lt;/span&gt; = &lt;span style="color: #4c83ff;"&gt;await&lt;/span&gt; fetch&lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;&lt;span style="color: #61CE3C;"&gt;'https://api.indego.iot.bosch-si.com/api/v1/alms/'&lt;/span&gt; + serialNumber + &lt;span style="color: #61CE3C;"&gt;'/state'&lt;/span&gt;, &lt;span style="color: #006400;"&gt;{&lt;/span&gt;     method: &lt;span style="color: #61CE3C;"&gt;'PUT'&lt;/span&gt;,     body: JSON.stringify&lt;span style="color: #ff1493;"&gt;(&lt;/span&gt;body&lt;span style="color: #ff1493;"&gt;)&lt;/span&gt;,     headers: &lt;span style="color: #ff1493;"&gt;{&lt;/span&gt;         &lt;span style="color: #61CE3C;"&gt;'x-im-context-id'&lt;/span&gt;: contextId,         &lt;span style="color: #61CE3C;"&gt;'Content-Type'&lt;/span&gt;: &lt;span style="color: #61CE3C;"&gt;'application/json'&lt;/span&gt;     &lt;span style="color: #ff1493;"&gt;}&lt;/span&gt; &lt;span style="color: #006400;"&gt;}&lt;/span&gt;&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt;;  &lt;span style="color: #4c83ff;"&gt;if&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;(&lt;/span&gt;!result.ok&lt;span style="color: #8b0000;"&gt;)&lt;/span&gt; &lt;span style="color: #8b0000;"&gt;{&lt;/span&gt;     &lt;span style="color: #4c83ff;"&gt;throw&lt;/span&gt; &lt;span style="color: #4c83ff;"&gt;new&lt;/span&gt; &lt;span style="color: #afd8af;"&gt;Error&lt;/span&gt;&lt;span style="color: #006400;"&gt;(&lt;/span&gt;result.statusText&lt;span style="color: #006400;"&gt;)&lt;/span&gt;; &lt;span style="color: #8b0000;"&gt;}&lt;/span&gt;  &lt;span style="color: #8B8989; font-style: italic;"&gt;// &lt;/span&gt;&lt;span style="color: #8B8989; font-style: italic;"&gt;this doesn't return a body, so as long as it didn't fail it should be good&lt;/span&gt; &lt;/pre&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;  &lt;div id="outline-container-orgbd27984" class="outline-2"&gt; &lt;h2 id="orgbd27984"&gt;Putting it together&lt;/h2&gt; &lt;div class="outline-text-2" id="text-orgbd27984"&gt; &lt;p&gt; The code snippets in this post can be added to HomeyScript cards in the flow editor, and you can link up your robot mower to anything else controlled by Homey. &lt;/p&gt;  &lt;p&gt; The screenshot below shows examples of controlling the mower with a virtual device, and monitoring the battery percentage with a virtual sensor. &lt;/p&gt;   &lt;figure id="org878b8c8"&gt; &lt;img src="./annotated-flow.png" alt="A screenshot of the Homey flow editor showing some ways of integrating the code from this post"&gt;  &lt;/figure&gt;  &lt;p&gt; Happy Automating! &lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; 


#+begin_src xml :tangle rss.xml :noweb yes
  <item>
    <title>Using Indego Robot Mowers from Homey</title>
    <link>https://chamook.lol/indego-homey/</link>
    <description>
      <<homey-post-content()>>
    </description>
    <pubDate>Fri, 26 Aug 2022 00:00:01 +0100</pubDate>
    <guid>https://chamook.lol/indego-homey/</guid>
    </item>
#+end_src

** Literate Programming with Org Mode

#+name: literate-org-post-content
#+begin_src shell :results verbatim
sed -n '/<div id="content" class="container">/,/<div id="postamble" class="status">/p' literate-programming-with-org/index.html | head -n-1 | sed 's/</\&lt;/g' | sed 's/>/\&gt;/g'
#+end_src

#+begin_src xml :tangle rss.xml :noweb yes
      <item>
        <title>Literate Programming with Org Mode 🦄 </title>
        <link>https://chamook.lol/literate-programming-with-org/</link>
        <description>
          <<literate-org-post-content()>>
        </description>
        <pubDate>Fri, 12 Aug 2022 00:00:01 +0100</pubDate>
        <guid>https://chamook.lol/literate-programming-with-org/</guid>
        </item>
#+end_src

* End stuff

#+begin_src xml :tangle rss.xml
  </channel>
  </rss>
#+end_src
